// Theme management system
class ThemeManager {
    constructor() {
        this.currentTheme = localStorage.getItem('theme') || 'default';\n        this.themes = {\n            default: {\n                name: 'Cosmic Purple',\n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%)',\n                primary: '#4CAF50',\n                secondary: '#2196F3',\n                accent: '#FF9800'\n            },\n            dark: {\n                name: 'Midnight Dark',\n                background: 'linear-gradient(135deg, #0c0c0c 0%, #1a1a1a 50%, #2d2d2d 100%)',\n                primary: '#00ff88',\n                secondary: '#00aaff',\n                accent: '#ff6b35'\n            },\n            ocean: {\n                name: 'Ocean Blue',\n                background: 'linear-gradient(135deg, #667db6 0%, #0082c8 50%, #0052d4 100%)',\n                primary: '#26c6da',\n                secondary: '#42a5f5',\n                accent: '#ffa726'\n            },\n            sunset: {\n                name: 'Sunset Orange',\n                background: 'linear-gradient(135deg, #ff9a9e 0%, #fecfef 50%, #fecfef 100%)',\n                primary: '#ff5722',\n                secondary: '#ff9800',\n                accent: '#e91e63'\n            },\n            forest: {\n                name: 'Forest Green',\n                background: 'linear-gradient(135deg, #134e5e 0%, #71b280 50%, #a8e6cf 100%)',\n                primary: '#4caf50',\n                secondary: '#8bc34a',\n                accent: '#cddc39'\n            }\n        };\n        \n        this.applyTheme(this.currentTheme);\n        this.createThemeSelector();\n    }\n    \n    applyTheme(themeName) {\n        const theme = this.themes[themeName];\n        if (!theme) return;\n        \n        const root = document.documentElement;\n        \n        // Update CSS custom properties\n        root.style.setProperty('--bg-gradient', theme.background);\n        root.style.setProperty('--primary-color', theme.primary);\n        root.style.setProperty('--secondary-color', theme.secondary);\n        root.style.setProperty('--accent-color', theme.accent);\n        \n        // Update body background\n        document.body.style.background = theme.background;\n        document.body.style.backgroundSize = '400% 400%';\n        \n        // Update button colors\n        const buttons = document.querySelectorAll('button, .action-btn');\n        buttons.forEach(btn => {\n            if (!btn.style.background || btn.style.background.includes('gradient')) {\n                btn.style.background = `linear-gradient(45deg, ${theme.primary}, ${theme.secondary})`;\n            }\n        });\n        \n        // Update progress bars\n        const progressBars = document.querySelectorAll('.progress-fill');\n        progressBars.forEach(bar => {\n            bar.style.background = `linear-gradient(45deg, ${theme.primary}, ${theme.secondary}, ${theme.accent})`;\n        });\n        \n        this.currentTheme = themeName;\n        localStorage.setItem('theme', themeName);\n    }\n    \n    createThemeSelector() {\n        const navStats = document.querySelector('.nav-stats');\n        if (!navStats) return;\n        \n        const themeSelector = document.createElement('div');\n        themeSelector.style.cssText = `\n            position: relative;\n            display: inline-block;\n        `;\n        \n        const themeButton = document.createElement('button');\n        themeButton.innerHTML = '<i class=\"fas fa-palette\"></i>';\n        themeButton.style.cssText = `\n            background: transparent;\n            border: 1px solid rgba(255,255,255,0.3);\n            color: white;\n            padding: 0.5rem;\n            border-radius: 6px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n        `;\n        \n        const themeDropdown = document.createElement('div');\n        themeDropdown.style.cssText = `\n            position: absolute;\n            top: 100%;\n            right: 0;\n            background: rgba(0,0,0,0.9);\n            backdrop-filter: blur(20px);\n            border-radius: 8px;\n            padding: 0.5rem;\n            margin-top: 0.5rem;\n            min-width: 150px;\n            display: none;\n            z-index: 1000;\n            box-shadow: 0 8px 32px rgba(0,0,0,0.3);\n        `;\n        \n        Object.entries(this.themes).forEach(([key, theme]) => {\n            const option = document.createElement('div');\n            option.style.cssText = `\n                padding: 0.5rem;\n                cursor: pointer;\n                border-radius: 4px;\n                transition: background 0.2s ease;\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n                color: white;\n            `;\n            \n            const colorPreview = document.createElement('div');\n            colorPreview.style.cssText = `\n                width: 12px;\n                height: 12px;\n                border-radius: 50%;\n                background: ${theme.primary};\n            `;\n            \n            option.appendChild(colorPreview);\n            option.appendChild(document.createTextNode(theme.name));\n            \n            option.addEventListener('mouseenter', () => {\n                option.style.background = 'rgba(255,255,255,0.1)';\n            });\n            \n            option.addEventListener('mouseleave', () => {\n                option.style.background = 'transparent';\n            });\n            \n            option.addEventListener('click', () => {\n                this.applyTheme(key);\n                themeDropdown.style.display = 'none';\n                if (window.soundManager) window.soundManager.play('click');\n            });\n            \n            themeDropdown.appendChild(option);\n        });\n        \n        themeButton.addEventListener('click', (e) => {\n            e.stopPropagation();\n            themeDropdown.style.display = themeDropdown.style.display === 'none' ? 'block' : 'none';\n            if (window.soundManager) window.soundManager.play('click');\n        });\n        \n        document.addEventListener('click', () => {\n            themeDropdown.style.display = 'none';\n        });\n        \n        themeSelector.appendChild(themeButton);\n        themeSelector.appendChild(themeDropdown);\n        navStats.appendChild(themeSelector);\n    }\n    \n    getTheme(themeName) {\n        return this.themes[themeName] || this.themes.default;\n    }\n    \n    getCurrentTheme() {\n        return this.getTheme(this.currentTheme);\n    }\n}\n\n// Initialize theme manager\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.themeManager = new ThemeManager();\n});"